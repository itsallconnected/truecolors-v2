name: Test libvips

on:
  push:
    branches:
      - 'main'
      - 'stable-*'
    paths:
      - '.github/workflows/test-libvips.yml'
      - 'Gemfile*'
      - '**/*.rb'
  pull_request:
    branches:
      - 'main'
      - 'stable-*'

env:
  BUNDLE_FROZEN: false
  GITHUB_RSPEC: ${{ github.event.pull_request && 'true' }}
  MASTODON_USE_LIBVIPS: true
  # Add encryption keys
  ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}
  ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}
  ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}
  # Add other essential secrets
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
  OTP_SECRET: ${{ secrets.OTP_SECRET }}
  # Add fetch replies configuration with default values
  FETCH_REPLIES_ENABLED: false
  FETCH_REPLIES_COOLDOWN_MINUTES: 1
  FETCH_REPLIES_INITIAL_WAIT_MINUTES: 2
  FETCH_REPLIES_MAX_GLOBAL: 1000
  FETCH_REPLIES_MAX_SINGLE: 500
  FETCH_REPLIES_MAX_PAGES: 500
  # Add XMPP configuration
  XMPP_DOMAIN: ${{ secrets.XMPP_DOMAIN }}
  XMPP_BOSH_URL: ${{ secrets.XMPP_BOSH_URL }}
  XMPP_WEBSOCKET_URL: ${{ secrets.XMPP_WEBSOCKET_URL }}
  XMPP_ADMIN_JID: ${{ secrets.XMPP_ADMIN_JID }}
  XMPP_ADMIN_PASSWORD: ${{ secrets.XMPP_ADMIN_PASSWORD }}
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby environment
        uses: ./.github/actions/setup-ruby
        with:
          ruby-version: '3.2.2'

      - name: Set up Javascript environment
        uses: ./.github/actions/setup-javascript
        with:
          onlyProduction: 'true'

      - name: Install Babel decorator plugin
        run: yarn add --dev @babel/plugin-proposal-decorators

      - name: Install XMPP/CrewAI/Ollama dependencies
        run: |
          # Install Python dependencies for CrewAI integration
          python -m pip install --upgrade pip
          pip install crewai langchain-ollama slixmpp cryptography psycopg2-binary pyyaml

          # Set CrewAI and Ollama configuration
          echo "CREWAI_ENABLED=true" >> $GITHUB_ENV
          echo "OLLAMA_HOST=${{ secrets.OLLAMA_HOST || 'http://localhost:11434' }}" >> $GITHUB_ENV
          echo "OLLAMA_MODEL=${{ secrets.OLLAMA_MODEL || 'phi3:mini' }}" >> $GITHUB_ENV

      - name: Allow bundle modifications
        run: |
          bundle config set --local path vendor/bundle
          # Ensure fernet gem is installed for encryption
          # bundle add command removed to preserve Gemfile.lock
          bundle config set --local path vendor/bundle 
          bundle install --jobs 4 --frozen

      - name: Install libvips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips-dev

      - name: Test libvips
        run: |
          bundle exec ruby -e "require 'vips'; puts Vips::LIBRARY_VERSION"
